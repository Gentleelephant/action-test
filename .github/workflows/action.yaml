#
# Copyright (C) 2022 Ing <https://github.com/Gentleelephant>
#
# This is free software, licensed under the MIT License.


name: Apply for mailbox
on:
  issues:
    types: [opened, reopened]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Get Issues Info
        if: github.event_name == 'issues' && github.event.issue.body != ''
        id: get-issues
        uses: actions/github-script@v6
        with:
          script: |  
            function randomPassword(length) {
                length = Number(length);
                if (length < 6) {
                  length = 6;
                } else if (length > 16) {
                  length = 16;
                }
                let passwordArray = ['ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz', '1234567890', '!@#$%&*()'];
                var password = [];
                let n = 0;
                for (let i = 0; i < length; i++) {
                    if ( password.length < (length - 4) ) {
                      let arrayRandom = Math.floor(Math.random() * 4);
                      let passwordItem = passwordArray[arrayRandom];
                      let item = passwordItem[Math.floor(Math.random() * passwordItem.length)];
                      password.push(item);
                    } else {
                      let newItem = passwordArray[n];
                      let lastItem = newItem[Math.floor(Math.random() * newItem.length)];
                      let spliceIndex = Math.floor(Math.random() * password.length);
                      password.splice(spliceIndex, 0, lastItem);
                      n++
                    }
                }
                return password.join("");
            }
            var passwd = randomPassword(12);
            var issuenumber = ${{ toJSON(github.event.issue.number) }};
            var issueauth = ${{ toJSON(github.event.issue.user.login) }};
            var issuetitle = ${{ toJSON(github.event.issue.title) }};
            var issuebody = ${{ toJSON(github.event.issue.body) }};
            var splits = issuetitle.split(' ');
            core.setOutput("issuenumber", JSON.stringify(issuenumber));
            core.setOutput("issueauth", JSON.stringify(issueauth));
            core.setOutput("issuebody", JSON.stringify(issuebody));
            core.setOutput("mail", JSON.stringify(splits[1]));
            core.setOutput("reply", JSON.stringify(issuebody));
            core.setOutput("passwd", JSON.stringify(passwd));
      - name: Set Issues Info
        if: github.event_name == 'issues' && success()
        run: |
          echo issuenumber: ${{ steps.get-issues.outputs.issuenumber }}
          echo issueauth:   ${{ steps.get-issues.outputs.issueauth }}
          echo mail: ${{ steps.get-issues.outputs.mail }}
          echo passwd: ${{ steps.get-issues.outputs.passwd }}
          echo issuebody:   ${{ steps.get-issues.outputs.issuebody }}
          echo env-issuenumber=${{ steps.get-issues.outputs.issuenumber }} >> $GITHUB_ENV
          echo env-issueauth=${{ steps.get-issues.outputs.issueauth }} >> $GITHUB_ENV
          echo env-issuetitle=${{ steps.get-issues.outputs.issuetitle }} >> $GITHUB_ENV
          echo env-issuebody=${{ steps.get-issues.outputs.issuebody }} >> $GITHUB_ENV
          echo env-mail=${{ steps.get-issues.outputs.mail }} >> $GITHUB_ENV
          echo env-passwd=${{ steps.get-issues.outputs.passwd }} >> $GITHUB_ENV
          echo env-reply=${{ steps.get-issues.outputs.reply }} >> $GITHUB_ENV
      - name: Create comment
        if: github.event.issue.body != '' && env.env-mail != '' && success()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
                申请邮箱：${{ env.env-mail }}
                临时密码：${{ env.env-passwd }}
                请访问 http://wwwbaidu.com 尽快修改密码
            `
            })
      - name: Close issue
        if: github.event.issue.body != '' && env.env-mail != '' && success()
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'close-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ env.env-issuenumber }}
          close-reason: completed