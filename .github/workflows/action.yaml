#
# Copyright (C) 2022 Ing <https://github.com/Gentleelephant>
name: Apply for mailbox
on:
  issues:
    types: [opened]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ADMIN: ${{ secrets.KUBESPHERE_ADMIN }}
      MAIL_SENDER: ${{ secrets.MAIL_SENDER }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      MAIL_PROTOCOL: ${{ secrets.MAIL_PROTOCOL }}
    steps:
      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Checkout
        uses: actions/checkout@main

      - name: Init Env
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install yagmail
      - name: Get Issues Info
        if: github.event_name == 'issues'
        id: get-issues
        uses: actions/github-script@v6
        with:
          script: |  
            var issuenumber = ${{ toJSON(github.event.issue.number) }};
            var issueauth = ${{ toJSON(github.event.issue.user.login) }};
            var issuetitle = ${{ toJSON(github.event.issue.title) }};
            var issuebody = ${{ toJSON(github.event.issue.body) }};
            var splits = issuebody.split('\r\n')
            var applyMail = (splits[0].split(':'))[1]
            var replyMail = (splits[1].split(':'))[1]
        
            core.setOutput("ISSUE_NUMBER", JSON.stringify(issuenumber));
            core.setOutput("ISSUE_TITLE", JSON.stringify(issuetitle));
            core.setOutput("ISSUE_AUTH", JSON.stringify(issueauth));
            core.setOutput("ISSUE_BODY", JSON.stringify(issuebody));
            core.setOutput("APPLY_MAIL", JSON.stringify(applyMail))
            core.setOutput("REPLY_MAIL", JSON.stringify(replyMail));
      - name: Set Issues Info
        if: github.event_name == 'issues' && success()
        run: |
          echo ISSUE_NUMBER=${{ steps.get-issues.outputs.ISSUE_NUMBER }} >> $GITHUB_ENV
          echo ISSUE_AUTH=${{ steps.get-issues.outputs.ISSUE_AUTH }} >> $GITHUB_ENV
          echo ISSUE_TITLE=${{ steps.get-issues.outputs.ISSUE_TITLE }} >> $GITHUB_ENV
          echo ISSUE_BODY=${{ steps.get-issues.outputs.ISSUE_BODY }} >> $GITHUB_ENV
          echo APPLY_MAIL=${{ steps.get-issues.outputs.APPLY_MAIL }} >> $GITHUB_ENV
          echo REPLY_MAIL=${{ steps.get-issues.outputs.REPLY_MAIL }} >> $GITHUB_ENV
      - name: Apply mailbox
        shell: sh
        if: env.APPLY_MAIL != '' && env.ISSUE_TITLE == '申请邮箱'  && success()
        run: |
          curl --user zheng1@kubesphere.io:$ADMIN -X POST -d "email=${{ env.env-mail }}" -d "password=${{ env.env-passwd }}" https://mail.kubesphere.io/admin/mail/users/add
      - name: Reply mail
        if: env.APPLY_MAIL != '' && env.ISSUE_TITLE == '申请邮箱'  && success()
        uses: jannekem/run-python-script-action@v1.2
        with:
          script: |
            # This is a sample Python script.
            import yagmail
            import random
            import string
            import requests
            from requests.auth import HTTPBasicAuth
            def genPassword(length):
                chars=string.ascii_letters+string.digits
                return ''.join([random.choice(chars) for i in range(length)])
            # 根据申请邮箱参数和回复邮箱参数，申请邮箱并回复
            def applyMethod():
                mailPassword = genPassword(12)
                resp = requests.post('https://mail.kubesphere.io/admin/mail/users/add',auth=HTTPBasicAuth('zheng1@kubesphere.io','admin'),data={
                  "email": "${{ env.APPLY_MAIL }}",
                  "password": mailPAssword,
                })
                print(r.text)
                # 发件人
                username = '${{ secrets.MAIL_SENDER }}'
                # 授权码密码
                password = '${{ secrets.MAIL_PASSWORD }}'
                # 创建yagmail服务,需要加上服务器地址
                server = yagmail.SMTP(username, password, host='${{ secrets.MAIL_PROTOCOL }}')
                # 收件人
                receivers = '${{ env.REPLY_MAIL }}'
                text = '您申请的邮箱是: ${{ env.APPLY_MAIL }}\n默认密码是: ' + mailPassword  # 报告内容
                title = '邮箱申请回复'  # 邮件标题
                server.send(contents=text, to=receivers, subject=title)
            if __name__ == '__main__':
                applyMethod()
      - name: Create comment
        if: github.event_name == 'issues'  && env.ISSUE_TITLE == '申请邮箱'  && env.APPLY_MAIL != '' && success()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
                ${{ env.PPLY_MAIL }}邮箱申请成功
                请访问 https://mail.kubesphere.io/mail/ 尽快修改密码
            `
            })
      - name: Close issue
        if:  env.APPLY_MAIL != '' && env.ISSUE_TITLE == '申请邮箱'  && success()
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'close-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          close-reason: completed
#nswibrevfyznifef