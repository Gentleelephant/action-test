#
# Copyright (C) 2022 Ing <https://github.com/Gentleelephant>
name: Apply for mailbox
on:
  issues:
    types: [opened]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ADMIN_USER: ${{ secrets.ADMIN_USER }}
      ADMIN_PASSWD: ${{ secrets.ADMIN_PASSWD }}
      MAIL_SENDER: ${{ secrets.MAIL_SENDER }} #发送方邮件地址
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }} #发送方邮件密码
      MAIL_PROTOCOL: ${{ secrets.MAIL_PROTOCOL }} #协议，例如smtp.qq.com
    steps:
      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - run: pip install --upgrade pip setuptools
      - run: pip install yagmail
        
      - name: Checkout
        uses: actions/checkout@main
      #      - name: Init Env
      #        run: |
      #          python -m pip install --upgrade pip setuptools
      #          python -m pip install yagmail
      - name: Set env
        if: github.event_name == 'issues'
        uses: jannekem/run-python-script-action@v1.2
        with:
          fail-on-error: false
          script: |
            def parseString(strs):
                splits = strs.split("\r\n")
                return splits[0].split(":")[1], splits[1].split(":")[1]
            if __name__ == '__main__':
              issuenumber = ${{ toJSON(github.event.issue.number) }}
              issueauth = ${{ toJSON(github.event.issue.user.login) }}
              issuetitle = ${{ toJSON(github.event.issue.title) }}
              issuebody = ${{ toJSON(github.event.issue.body) }}
              results = parseString(issuebody)
              applyMail = results[0]
              replyMail = results[1]
              set_env('ISSUE_NUMBER',str(issuenumber))
              set_env('ISSUE_AUTH',issueauth)
              set_env('ISSUE_TITLE',issuetitle)
              set_env('APPLY_MAIL',applyMail)
              set_env('REPLY_MAIL',replyMail)
      - name: Reply mail
        if: env.APPLY_MAIL != '' && env.ISSUE_TITLE == '申请邮箱'  && success()
        uses: jannekem/run-python-script-action@v1.2
        with:
          script: |
            # This is a sample Python script.
            import yagmail
            import random
            import string
            import requests
            from requests.auth import HTTPBasicAuth
            def genPassword(length):
                chars=string.ascii_letters+string.digits
                return ''.join([random.choice(chars) for i in range(length)])
            # 根据申请邮箱参数和回复邮箱参数，申请邮箱并回复
            def applyMethod():
                mailPassword = genPassword(12)
                resp = requests.post('https://mail.kubesphere.io/admin/mail/users/add',auth=HTTPBasicAuth('${{env.ADMIN_USER}}','${{ env.ADMIN_PASSWD }}'),data={
                  "email": "${{ env.APPLY_MAIL }}",
                  "password": mailPassword,
                })
                set_env('CONTENT',resp.text)
                set_env('STATUS_CODE',str(resp.status_code))
                username = '${{ secrets.MAIL_SENDER }}'
                password = '${{ secrets.MAIL_PASSWORD }}'
                server = yagmail.SMTP(username, password, host='${{ secrets.MAIL_PROTOCOL }}')
                receivers = '${{ env.REPLY_MAIL }}'
                text = '您申请的邮箱是:${{ env.APPLY_MAIL }}\n' + '默认密码是:%s' % (mailPassword) + '\n请尽快访问 www.baidu.com 修改密码'
                title = '邮箱申请回复'
                server.send(contents=text, to=receivers, subject=title)
            if __name__ == '__main__':
                applyMethod()
      - name: Create comment
        if: github.event_name == 'issues'  && env.ISSUE_TITLE == '申请邮箱'  && env.APPLY_MAIL != '' && success()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
                详细输出: ${{ env.CONTENT }}
                状态码: ${{ env.STATUS_CODE }}
            `
            })
      - name: Close issue
        if:  env.APPLY_MAIL != '' && env.ISSUE_TITLE == '申请邮箱'  && success()
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'close-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          close-reason: completed